# Generated by Django 4.2.8 on 2023-12-04 15:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import rules.contrib.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcceptanceCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_type', models.CharField(choices=[('DISABLED', 'Disabled'), ('MANUAL', 'Manual'), ('QUIZ', 'Quiz'), ('REGEX', 'Regular expression'), ('FLAG', 'Flag'), ('MIXED', 'Mixed')], default='DISABLED', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(max_length=200)),
                ('value', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='catalog.classroom')),
            ],
            options={
                'unique_together': {('title', 'classroom')},
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('question_type', models.CharField(choices=[('SINGLE_CHOICE', 'Single choice'), ('MULTIPLE_CHOICE', 'Multiple choice')], default='SINGLE_CHOICE', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Regex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.CharField(max_length=200)),
                ('pattern', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('task_type', models.CharField(choices=[('NEUTRAL', 'Neutral'), ('DEFENSE', 'Defense'), ('ATTACK', 'Attack')], default='NEUTRAL', max_length=7)),
                ('difficulty', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced')], max_length=12)),
                ('acceptance_criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.acceptancecriteria')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='catalog.project')),
            ],
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Virtualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('virtualization_role', models.CharField(choices=[('USER_SHELL', 'User Shell'), ('USER_ACCESSIBLE', 'User-accessible via IP')], max_length=15)),
                ('dockerfile', models.TextField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='virtualizations', to='catalog.task')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='catalog.question')),
            ],
        ),
        migrations.CreateModel(
            name='HelpfulResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('url', models.URLField()),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_resources', to='catalog.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='ClassroomInstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classroominstructor_added_by', to=settings.AUTH_USER_MODEL)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.classroom')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classroominstructor_instructor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('classroom', 'instructor')},
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='instructors',
            field=models.ManyToManyField(related_name='classrooms', through='catalog.ClassroomInstructor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='acceptancecriteria',
            name='flags',
            field=models.ManyToManyField(blank=True, to='catalog.flag'),
        ),
        migrations.AddField(
            model_name='acceptancecriteria',
            name='questions',
            field=models.ManyToManyField(blank=True, to='catalog.question'),
        ),
        migrations.AddField(
            model_name='acceptancecriteria',
            name='regexes',
            field=models.ManyToManyField(blank=True, to='catalog.regex'),
        ),
    ]
